name: Frontend Continuous Integration

on:
  pull_request:
    branches:
      - main # Trigger on pull requests to the main branch
    paths:
      - 'starter/frontend/**' # Only trigger if files in the frontend directory change
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: cd starter/frontend && npm ci

      - name: Run tests
        run: cd starter/frontend && npm test
  
  test:
    runs-on: ubuntu-latest
    container:
      image: node:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: npm install dependencies
        run: npm ci
        working-directory: ./starter/frontend

      - name: npm test
        run: npm test
        working-directory: ./starter/frontend

  build:
    runs-on: ubuntu-latest
    needs: [ lint, test ]  # This job will only run if lint and test jobs succeed
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: starter/frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install --prefix starter/frontend

      - name: Build Docker image
        run: |
          cd starter/frontend  # Navigate to the frontend directory
          docker build -t movie-picture-app .